name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  matrix:
    name: Lint/Test (Node ${{ matrix.node }} / Py ${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20.x, 22.x]
        python: ["3.11", "3.12", "3.13"]
        include:
          - node: 20.x
            python: "3.13"
            e2e: true
    steps:
      - uses: actions/checkout@v5
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Install Node deps
        run: pnpm install --frozen-lockfile=false
      - name: Install Python core-api (dev)
        run: pip install -e apps/core-api[dev]
      - name: Install Python sdk (dev)
        run: pip install -e packages/sdk-py[dev]
      - name: Node lint
        run: pnpm eslint . --max-warnings=0
      - name: Node typecheck
        run: pnpm tsc --noEmit
      - name: Node unit tests (Vitest)
        run: pnpm --filter ./packages/sdk-js test
      - name: Python static analysis (ruff)
        run: ruff check apps/core-api/server
      - name: Python typecheck (mypy)
        run: mypy apps/core-api/server
      - name: Python security (bandit)
        run: bandit -q -r apps/core-api/server
      - name: Python vuln audit (pip-audit)
        run: pip-audit || (echo "pip-audit found issues" && exit 1)
      - name: Python tests
        run: pytest apps/core-api/tests -q
      - name: Python SDK tests
        run: pytest packages/sdk-py/tests -q
      - name: Playwright Browsers
        if: matrix.e2e == 'true'
        run: npx playwright install --with-deps chromium
      - name: Console E2E (Playwright)
        if: matrix.e2e == 'true'
        env:
          CI: 'true'
        run: pnpm --filter ./apps/console e2e
      - name: Upload Playwright Report
        if: matrix.e2e == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/console/playwright-report
          if-no-files-found: ignore

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [matrix]
    if: always()
    steps:
      - name: Aggregate result
        run: |
          echo "Overall: ${{ needs.matrix.result }}"
          test "${{ needs.matrix.result }}" = "success"